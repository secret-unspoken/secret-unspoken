{"version":3,"sources":["webpack:///./src/components/Delay.js","webpack:///./src/pages/subscribe.js","webpack:///./src/components/Button/ButtonBase.module.css","webpack:///./src/components/Button/ButtonBase.js","webpack:///./src/components/Subscribe.module.css","webpack:///./src/components/Input/TextField.module.css","webpack:///./src/components/Button/ButtonOutlined.js","webpack:///./src/components/Input/TextField.js","webpack:///./src/components/Subscribe.js"],"names":["Delay","state","render","componentDidMount","_this2","this","setTimeout","setState","props","delay","children","React","Component","propTypes","PropTypes","number","isRequired","defaultProps","SubscribePage","react_default","a","createElement","Layout","Column","components_Delay","Subscribe","module","exports","btn","btnShadow","btnContained","btnOutlined","ButtonBase","className","rest","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2___default","Object","assign","classNames","styles","container","input","ButtonOutlined","TextField","email","msg","handleChange","e","_this","target","value","handleSubmit","_callee","result","regenerator_default","wrap","_context","prev","next","preventDefault","addToMailchimp","sent","window","ga","eventCategory","eventAction","eventLabel","eventValue","stop","Input_TextField","type","placeholder","Button_ButtonOutlined","onClick","MySnackbar"],"mappings":"iLAGMA,sJACFC,MAAM,CACFC,QAAQ,yCAGZC,6BAAmB,IAAAC,EAAAC,KACfC,WAAW,kBAAIF,EAAKG,SAAS,CAACL,QAAO,KAAOG,KAAKG,MAAMC,UAG3DP,kBACI,OAAOG,KAAKJ,MAAMC,OACZG,KAAKG,MAAME,SACX,SAZMC,IAAMC,WAgB1BZ,EAAMa,UAAU,CACZJ,MAAOK,IAAUC,OAAOC,YAG5BhB,EAAMiB,aAAa,CACfR,MAAO,KAGIT,QCXAkB,UAVO,SAAAV,GAAK,OACvBW,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACG,EAAD,KACIL,EAAAC,EAAAC,cAACI,EAAA,EAAD,+BCThBC,EAAAC,QAAA,CAAkBC,IAAA,gCAAAC,UAAA,wCAAAC,aAAA,2CAAAC,YAAA,6JCcHC,IAVI,SAAAxB,GAAS,IAChByB,EAAuBzB,EAAvByB,UAAcC,EADEC,IACO3B,EADP,eAGxB,OACI4B,EAAAhB,EAAAC,cAAA,SAAAgB,OAAAC,OAAA,GAAYJ,EAAZ,CAAkBD,UAAWM,IAAWC,IAAOZ,IAAIK,KAC7CzB,EAAME,gCCTpBgB,EAAAC,QAAA,CAAkBc,UAAA,2DCAlBf,EAAAC,QAAA,CAAkBe,MAAA,iMCUHC,EANQ,SAAAnC,GAAK,OACxBW,EAAAC,EAAAC,cAACW,EAAA,EAADK,OAAAC,OAAA,GAAgB9B,EAAhB,CAAuByB,UAAWO,IAAOT,cACnCvB,EAAME,iECIDkC,EAPG,SAAApC,GAAK,OACnBW,EAAAC,EAAAC,cAAA,QAAAgB,OAAAC,OAAA,GACQ9B,EADR,CAEIyB,UAAWO,IAAOE,UCApBjB,sJAEFxB,MAAM,CACF4C,MAAM,KACNC,IAAI,QAGRC,aAAe,SAAAC,GACXC,EAAK1C,SAAS,CAACsC,MAAOG,EAAEE,OAAOC,MAAOL,IAAK,UAG/CM,2CAAe,SAAAC,EAAOL,GAAP,IAAAM,EAAA,OAAAC,EAAAnC,EAAAoC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXX,EAAEY,iBADSH,EAAAE,KAAA,EAEUE,IAAeZ,EAAKhD,MAAM4C,OAFpC,OAELS,EAFKG,EAAAK,KAGXb,EAAK1C,SAAS,CAACuC,IAAKQ,EAAOR,MAC3BxC,WAAW,kBAAI2C,EAAK1C,SAAS,CAAEuC,IAAK,QAAQ,KACxB,YAAhBQ,EAAOA,QAAsBS,OAAOC,IACpCD,OAAOC,GAAG,OAAQ,QAAS,CACvBC,cAAe,YACfC,YAAa,oBACbC,WAAY,qBACZC,WAAY,IAVT,wBAAAX,EAAAY,SAAAhB,EAAAhD,6FAefH,kBACI,OACIiB,EAAAC,EAAAC,cAAA,OAAKY,UAAWO,IAAOC,WACnBtB,EAAAC,EAAAC,cAACiD,EAAD,CACIC,KAAK,QACLpB,MAAO9C,KAAKJ,MAAM4C,MAClB2B,YAAY,UAEhBrD,EAAAC,EAAAC,cAACoD,EAAD,CACIC,QAASrE,KAAK+C,cADlB,aAIAjC,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAY7B,IAAKzC,KAAKJ,MAAM6C,WAtCpBnC,IAAMC,WA4Cfa","file":"component---src-pages-subscribe-js-506030366c6a27410c19.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass Delay extends React.Component {\n    state={\n        render: false\n    }\n\n    componentDidMount(){\n        setTimeout(()=>this.setState({render:true}),this.props.delay)\n    }\n\n    render(){\n        return this.state.render \n            ? this.props.children\n            : null\n    }\n}\n\nDelay.propTypes={\n    delay: PropTypes.number.isRequired\n}\n\nDelay.defaultProps={\n    delay: 200\n}\n\nexport default Delay","import React from 'react'\nimport Subscribe from '../components/Subscribe'\nimport Layout from '../components/Layout'\nimport Column from '../components/Column'\nimport Delay from '../components/Delay'\n\nconst SubscribePage = props => (\n    <Layout>\n        <Column>\n            <Delay>\n                <Subscribe/>\n            </Delay>\n        </Column>\n    </Layout>\n)\n\nexport default SubscribePage","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ButtonBase-module--btn--VIkqv\",\"btnShadow\":\"ButtonBase-module--btn--shadow--2enFj\",\"btnContained\":\"ButtonBase-module--btn--contained--2lS1t\",\"btnOutlined\":\"ButtonBase-module--btn--outlined--2IVX3\"};","import React from 'react'\nimport classNames from 'classnames'\n\nimport styles from './ButtonBase.module.css'\n\nconst ButtonBase = props => {\n    const { className, ...rest } = props\n\n    return (\n        <button {...rest} className={classNames(styles.btn,className)}>\n            { props.children }    \n        </button>\n    )\n}\n\nexport default ButtonBase","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Subscribe-module--container--3qvxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TextField-module--input--3xEcb\"};","import React from 'react'\nimport ButtonBase from './ButtonBase'\n\nimport styles from './ButtonBase.module.css'\n\nconst ButtonOutlined = props => (\n    <ButtonBase {...props} className={styles.btnOutlined}>\n        { props.children }\n    </ButtonBase>\n)\n\nexport default ButtonOutlined","import React from 'react'\n\nimport styles from './TextField.module.css'\n\nconst TextField = props => (\n    <input \n        {...props}\n        className={styles.input}\n    />\n)\n\nexport default TextField","import React from 'react'\nimport MySnackbar from './MySnackbar'\nimport Button from './Button/ButtonOutlined'\nimport addToMailchimp from 'gatsby-plugin-mailchimp'\nimport styles from './Subscribe.module.css'\nimport TextField from './Input/TextField'\n\nclass Subscribe extends React.Component {\n\n    state={\n        email:null,\n        msg:null\n    }\n\n    handleChange = e => {\n        this.setState({email: e.target.value, msg: null })\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault()\n        const result = await addToMailchimp(this.state.email)\n        this.setState({msg: result.msg })\n        setTimeout(()=>this.setState({ msg: null }),5000)\n        if (result.result===\"success\" && window.ga){\n            window.ga(\"send\", \"event\", {\n                eventCategory: \"Subscribe\",\n                eventAction: \"subscribe success\",\n                eventLabel: \"Subscribe Campaign\",\n                eventValue: 1\n            })\n        }\n    }\n\n    render(){\n        return (\n            <div className={styles.container}>\n                <TextField \n                    type=\"email\" \n                    value={this.state.email}\n                    placeholder=\"email\"\n                />\n                <Button \n                    onClick={this.handleSubmit}>\n                    Subscribe\n                </Button>\n                <MySnackbar msg={this.state.msg}/>\n            </div>\n        )\n    }\n}\n\nexport default Subscribe"],"sourceRoot":""}