{"version":3,"sources":["webpack:///./src/components/Button/ButtonContained.js","webpack:///./src/components/GetStarted.js","webpack:///./src/components/SecondaryContent.js","webpack:///./src/pages/index.js","webpack:///./src/components/Subscribe.module.css","webpack:///./src/components/Input/TextField.module.css","webpack:///./src/components/Button/ButtonOutlined.js","webpack:///./src/components/Input/TextField.js","webpack:///./src/components/Subscribe.js","webpack:///./src/components/GetStarted.module.css","webpack:///./src/components/SecondaryContent.module.css"],"names":["ButtonContained","props","react_default","a","createElement","ButtonBase","Object","assign","className","classNames","styles","btnContained","btnShadow","children","handleClick","window","ga","eventCategory","eventAction","eventLabel","eventValue","GetStarted","container","gatsby_browser_entry","link","onClick","to","Button_ButtonContained","SecondaryContent","__webpack_require__","d","__webpack_exports__","query","Layout","Hidden_default","smDown","Column","maxWidth","dangerouslySetInnerHTML","__html","data","markdownRemark","html","components_GetStarted","mdUp","BottomPadding","components_SecondaryContent","Subscribe","module","exports","input","ButtonOutlined","btnOutlined","TextField","state","email","msg","handleChange","e","_this","setState","target","value","handleSubmit","_callee","result","regenerator_default","wrap","_context","prev","next","preventDefault","addToMailchimp","sent","setTimeout","stop","this","render","Input_TextField","type","placeholder","Button_ButtonOutlined","MySnackbar","React","Component"],"mappings":"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","file":"component---src-pages-index-js-36b591ad0dee97673d31.js","sourcesContent":["import React from 'react'\nimport ButtonBase from './ButtonBase'\nimport classNames from 'classnames'\n\nimport styles from './ButtonBase.module.css'\n\nconst ButtonContained = props => (\n    <ButtonBase {...props} className={classNames(\n        styles.btnContained,\n        styles.btnShadow\n        )}>\n        { props.children }\n    </ButtonBase>\n)\n\nexport default ButtonContained","import React from 'react'\nimport { Link } from 'gatsby'\nimport ButtonContained from './Button/ButtonContained'\n\nimport styles from './GetStarted.module.css'\n\nconst handleClick = () => {\n    if (window.ga){\n        window.ga(\"send\", \"event\", {\n            eventCategory: \"Retention\",\n            eventAction: \"posts\",\n            eventLabel: \"Retention Campaign\",\n            eventValue: 1\n        })\n    }\n}\n\nconst GetStarted = props => (\n    <div className={styles.container}>\n        <Link className={styles.link} onClick={handleClick} to=\"/posts\">\n            <ButtonContained>\n                Get Started &#8594;\n            </ButtonContained>\n        </Link>\n    </div>\n    \n)\n\nexport default GetStarted","import React from 'react'\n\nimport styles from './SecondaryContent.module.css'\n\nconst SecondaryContent = props => (\n    <div className={styles.container}>\n        { props.children }\n    </div>\n)\n\nexport default SecondaryContent","import React from 'react'\nimport Layout from '../components/Layout'\nimport Column from '../components/Column'\nimport { graphql } from 'gatsby'\nimport GetStarted from '../components/GetStarted'\nimport Subscribe from '../components/Subscribe'\nimport Hidden from '@material-ui/core/Hidden'\nimport SecondaryContent from '../components/SecondaryContent'\nimport BottomPadding from '../components/BottomPadding'\n\nconst IndexPage = (props) => (\n  <Layout>\n    <Hidden smDown>\n      <Column maxWidth='25vw'/>\n    </Hidden>\n    <Column>\n      <div className=\"markdown-body\" dangerouslySetInnerHTML={{ __html: props.data.markdownRemark.html }} />\n      <GetStarted />\n      <Hidden mdUp>\n        <hr/>\n        <BottomPadding />\n        <SecondaryContent>\n          <Subscribe/>\n        </SecondaryContent>\n      </Hidden>  \n    </Column>\n    <Hidden smDown>\n      <Column maxWidth='25vw'>\n        <SecondaryContent>\n          <Subscribe/>\n        </SecondaryContent>\n      </Column>\n    </Hidden>\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    markdownRemark(frontmatter: { title: { eq: \"mission\" } }) {\n      html\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Subscribe-module--container--3qvxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TextField-module--input--3xEcb\"};","import React from 'react'\nimport ButtonBase from './ButtonBase'\n\nimport styles from './ButtonBase.module.css'\n\nconst ButtonOutlined = props => (\n    <ButtonBase {...props} className={styles.btnOutlined}>\n        { props.children }\n    </ButtonBase>\n)\n\nexport default ButtonOutlined","import React from 'react'\n\nimport styles from './TextField.module.css'\n\nconst TextField = props => (\n    <input \n        {...props}\n        className={styles.input}\n    />\n)\n\nexport default TextField","import React from 'react'\nimport MySnackbar from './MySnackbar'\nimport Button from './Button/ButtonOutlined'\nimport addToMailchimp from 'gatsby-plugin-mailchimp'\nimport styles from './Subscribe.module.css'\nimport TextField from './Input/TextField'\n\nclass Subscribe extends React.Component {\n\n    state={\n        email:null,\n        msg:null\n    }\n\n    handleChange = e => {\n        this.setState({email: e.target.value, msg: null })\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault()\n        const result = await addToMailchimp(this.state.email)\n        this.setState({msg: result.msg })\n        setTimeout(()=>this.setState({ msg: null }),5000)\n        if (result.result===\"success\" && window.ga){\n            window.ga(\"send\", \"event\", {\n                eventCategory: \"Subscribe\",\n                eventAction: \"subscribe success\",\n                eventLabel: \"Subscribe Campaign\",\n                eventValue: 1\n            })\n        }\n    }\n\n    render(){\n        return (\n            <div className={styles.container}>\n                <TextField \n                    type=\"email\" \n                    value={this.state.email}\n                    placeholder=\"email\"\n                />\n                <Button \n                    onClick={this.handleSubmit}>\n                    Subscribe\n                </Button>\n                <MySnackbar msg={this.state.msg}/>\n            </div>\n        )\n    }\n}\n\nexport default Subscribe","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"GetStarted-module--link--3V8ex\",\"container\":\"GetStarted-module--container--106OG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SecondaryContent-module--container--3j-3i\"};"],"sourceRoot":""}