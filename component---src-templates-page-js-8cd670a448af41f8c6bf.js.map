{"version":3,"sources":["webpack:///./src/templates/page.js","webpack:///./src/components/HeaderMeta.module.css","webpack:///./src/components/PostHeader.module.css","webpack:///./src/components/HeaderMeta.js","webpack:///./src/components/PostHeader.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_Column__WEBPACK_IMPORTED_MODULE_2__","_components_PostHeader__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","_ref","data","post","markdownRemark","a","createElement","Fragment","site","siteMetadata","title","frontmatter","date","className","dangerouslySetInnerHTML","__html","html","module","exports","meta","metaHeading","HeaderMeta","props","react_default","styles","prefix","children","defaultProps","PostHeader","components_HeaderMeta","wordCount","wc","Math","round"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAAO,EAAAI,GAAAX,EAAA,IAQeE,EAAA,iBAAAW,GAAc,IAAXC,EAAWD,EAAXC,KACVC,EAAOD,EAAKE,eAClB,OACEV,EAAAW,EAAAC,cAACZ,EAAAW,EAAME,SAAP,KACEb,EAAAW,EAAAC,cAACN,EAAAK,EAAD,KACEX,EAAAW,EAAAC,cAAA,aAAQJ,EAAKM,KAAKC,aAAaC,MAA/B,MAAyCP,EAAKQ,YAAYD,QAE5DhB,EAAAW,EAAAC,cAACV,EAAA,EAAD,KACIF,EAAAW,EAAAC,cAACT,EAAA,EAAD,KACIH,EAAAW,EAAAC,cAACR,EAAA,EAAD,CACEY,MAAOP,EAAKQ,YAAYD,MACxBE,KAAMT,EAAKQ,YAAYC,OAEzBlB,EAAAW,EAAAC,cAAA,OAAKO,UAAU,gBAAgBC,wBAAyB,CAAEC,OAAQZ,EAAKa,YAQ9E,IAAMxB,EAAK,iCC5BlByB,EAAAC,QAAA,CAAkBC,KAAA,uDCAlBF,EAAAC,QAAA,CAAkBE,YAAA,kHCGZC,EAAa,SAAAC,GAAK,OACpBC,EAAAlB,EAAAC,cAAA,QAAMO,UAAWW,IAAOL,MAAOG,EAAMG,OAAQH,EAAMI,WAGvDL,EAAWM,aAAa,CACpBF,OAAQ,IAGGJ,0BCUAO,IAfI,SAAAN,GAAK,OACpBC,EAAAlB,EAAAC,cAAA,OAAKO,UAAWW,IAAOJ,aACnBG,EAAAlB,EAAAC,cAAA,WACIiB,EAAAlB,EAAAC,cAACuB,EAAD,KAAaP,EAAMV,MACjBU,EAAMQ,WACJP,EAAAlB,EAAAC,cAACiB,EAAAlB,EAAME,SAAP,KACIgB,EAAAlB,EAAAC,cAACuB,EAAD,UACAN,EAAAlB,EAAAC,cAACuB,EAAD,MATAE,EASyBT,EAAMQ,UATzBE,KAAKC,MAAMF,EAAG,MASpB,eAIZR,EAAAlB,EAAAC,cAAA,UAAKgB,EAAMZ,QAbC,IAAAqB","file":"component---src-templates-page-js-8cd670a448af41f8c6bf.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Column from '../components/Column'\nimport PostHeader from '../components/PostHeader'\nimport Helmet from 'react-helmet'\nimport \"github-markdown-css\"\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <React.Fragment>\n      <Helmet>\n        <title>{data.site.siteMetadata.title} | {post.frontmatter.title}</title>\n      </Helmet>\n      <Layout>\n          <Column>\n              <PostHeader \n                title={post.frontmatter.title} \n                date={post.frontmatter.date}\n              />\n              <div className=\"markdown-body\" dangerouslySetInnerHTML={{ __html: post.html }} />\n          </Column>\n      </Layout>\n    </React.Fragment>\n    \n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM, YYYY\")\n      }\n    }\n  }\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"HeaderMeta-module--meta--1iWAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metaHeading\":\"PostHeader-module--meta-heading--2nY_2\"};","import React from 'react'\n\nimport styles from './HeaderMeta.module.css'\n\nconst HeaderMeta = props => (\n    <span className={styles.meta}>{props.prefix}{props.children}</span>\n)\n\nHeaderMeta.defaultProps={\n    prefix: \"\"\n}\n\nexport default HeaderMeta","import React from 'react'\nimport HeaderMeta from './HeaderMeta'\n\nimport styles from './PostHeader.module.css'\n\nconst estimateTTR = wc => Math.round(wc/250)\n\nconst PostHeader = props => (\n    <div className={styles.metaHeading}>\n        <div>\n            <HeaderMeta>{props.date}</HeaderMeta>\n            { props.wordCount && (\n                <React.Fragment>\n                    <HeaderMeta>â€¢</HeaderMeta>\n                    <HeaderMeta>{estimateTTR(props.wordCount)} min read</HeaderMeta>\n                </React.Fragment>\n            )}\n        </div>\n        <h2>{props.title}</h2>\n    </div>\n)\n\nexport default PostHeader"],"sourceRoot":""}