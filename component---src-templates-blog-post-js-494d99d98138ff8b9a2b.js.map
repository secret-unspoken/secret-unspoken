{"version":3,"sources":["webpack:///./src/components/Button/ButtonText.js","webpack:///./src/components/StoryEngagement.js","webpack:///./src/components/PostLink.js","webpack:///./src/components/AddToHomeScreen.js","webpack:///./src/components/ArticleStructuredData.js","webpack:///./src/components/BlogPostFooter/BlogPostFooter.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/Button/ButtonBase.module.css","webpack:///./src/components/Button/ButtonBase.js","webpack:///./src/components/MySnackbar.js","webpack:///./src/components/HeaderMeta.module.css","webpack:///./src/components/PostHeader.module.css","webpack:///./src/components/HeaderMeta.js","webpack:///./src/components/PostHeader.js","webpack:///./src/components/StoryEngagement.module.css","webpack:///./src/components/PostLink.module.css","webpack:///./src/components/AddToHomeScreen.module.css","webpack:///./src/components/BlogPostFooter/BlogPostFooter.module.css"],"names":["ButtonText","props","react_default","a","createElement","ButtonBase","children","StoryEngagement","state","copied","href","handleCopy","text","clearTimeout","_this","copyId","setState","setTimeout","window","ga","eventCategory","eventAction","eventLabel","eventValue","componentDidMount","URL","url","this","searchParams","append","Date","now","componentWillUnmount","render","Fragment","className","styles","container","Button_ButtonText","react_copy_to_clipboard_lib","onCopy","buttonContent","Link_default","MySnackbar","msg","React","Component","next","prev","handleClick","PostLink","gatsby_browser_entry","onClick","to","isNext","propTypes","PropTypes","bool","isRequired","defaultProps","AddToHomeScreen","deferredPrompt","display","handleAdd","e","preventDefault","prompt","userChoice","then","choiceResult","chosen","outcome","localStorage","setItem","notify","handleClose","createMsg","link","IconButton_default","Close_default","fontSize","_this2","addEventListener","getItem","after","duration","Infinity","number","ArticleStructuredData","title","slug","author","description","blogName","imgs","pubDate","modDate","siteUrl","content","JSON","stringify","@context","@type","mainEntityOfPage","@id","headline","image","datePublished","moment","utc","format","dateModified","name","publisher","logo","Helmet_default","type","strType","string","arrayOf","BlogPostFooter","classes","root","__webpack_require__","d","__webpack_exports__","query","_ref","data","location","pageContext","siteMeta","site","siteMetadata","post","markdownRemark","disqusConfig","identifier","fields","frontmatter","components_ArticleStructuredData","banner","date","Layout","components_AddToHomeScreen","Column","PostHeader","wordCount","words","components_StoryEngagement","dangerouslySetInnerHTML","__html","html","components_PostLink","components_BlogPostFooter_BlogPostFooter","lib_default","DiscussionEmbed","shortname","config","module","exports","btn","btnShadow","btnContained","btnOutlined","rest","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2___default","Object","assign","classNames","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_Hidden__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Hidden__WEBPACK_IMPORTED_MODULE_2___default","smDown","autoHideDuration","anchorOrigin","vertical","horizontal","open","ContentProps","aria-describedby","message","id","mdUp","meta","metaHeading","HeaderMeta","prefix","components_HeaderMeta","wc","Math","round"],"mappings":"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","file":"component---src-templates-blog-post-js-494d99d98138ff8b9a2b.js","sourcesContent":["import React from 'react'\nimport ButtonBase from './ButtonBase'\n\nconst ButtonText = props => (\n    <ButtonBase {...props}>\n        { props.children }\n    </ButtonBase>\n)\n\nexport default ButtonText","import React from 'react'\n\nimport Share from '@material-ui/icons/Link'\nimport Button from './Button/ButtonText'\nimport styles from './StoryEngagement.module.css'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport MySnackbar from './MySnackbar'\n\nclass StoryEngagement extends React.Component {\n\n    state={\n        copied:false,\n        href: null\n    }\n\n    componentDidMount(){\n        if (window.URL){\n            const url = new window.URL(this.props.url)\n            url.searchParams.append(\"suid\",Date.now())\n            this.setState({ href: url.href })\n        } else {\n            this.setState({ href: this.props.url })\n        }\n    }\n\n    handleCopy = (text) => {\n        clearTimeout(this.copyId)\n        this.setState({copied:true})\n        this.copyId=setTimeout(()=>this.setState({copied:false}),5000)\n        if (window.ga){\n            window.ga(\"send\", \"event\", {\n                eventCategory: \"Sharing\",\n                eventAction: text,\n                eventLabel: \"Sharing Campaign\",\n                eventValue: 1\n            })\n        }\n    }\n\n    componentWillUnmount(){\n        clearTimeout(this.copyId)\n    }\n\n    render(){\n\n        if(!this.state.href) return null\n        \n        return (\n            <React.Fragment>\n                <div className={styles.container}>\n                    <Button>\n                        <CopyToClipboard text={this.state.href} onCopy={this.handleCopy}>\n                            <div className={styles.buttonContent}><Share/><pre> Copy Page URL</pre></div>\n                        </CopyToClipboard>\n                    </Button>\n                </div>\n                <MySnackbar msg={this.state.copied && \"URL copied to clipboard\"}/>\n            </React.Fragment>\n            \n        )\n    }\n}\n\nexport default StoryEngagement","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport styles from './PostLink.module.css'\n\nconst next = <span>&#8594;</span>\nconst prev = <span>&#8592;</span>\n\nconst handleClick = () => {\n    if (window.ga){\n        window.ga(\"send\", \"event\", {\n            eventCategory: \"Retention\",\n            eventAction: \"next post\",\n            eventLabel: \"Retention Campaign\",\n            eventValue: 1\n        })\n    }\n}\n\nconst PostLink = props => (\n    <div className={styles.container}>\n        <pre>\n            <Link\n                onClick={handleClick} \n                to={props.to}>{props.isNext ? null : prev} {props.children} {props.isNext ? next : null}</Link>\n        </pre>\n    </div>\n)\n\nPostLink.propTypes={\n    isNext: PropTypes.bool.isRequired\n}\n\nPostLink.defaultProps={\n    isNext: true\n}\n\nexport default PostLink","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport MySnackbar from './MySnackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { Link } from 'gatsby'\n\nimport styles from './AddToHomeScreen.module.css'\n\nclass AddToHomeScreen extends React.Component {\n\n    state={\n        deferredPrompt: null,\n        display: false\n    }\n\n    handleAdd = (e) => {\n        e.preventDefault()\n\n        const { deferredPrompt } = this.state\n        deferredPrompt.prompt()\n\n        deferredPrompt.userChoice\n            .then((choiceResult) => {\n                const chosen = choiceResult.outcome==='accepted'\n                localStorage.setItem('a2hs',chosen ? 'true' : 'false')\n                localStorage.setItem('a2hs-decision','made')\n                if (window.ga){\n                    window.ga(\"send\", \"event\", {\n                        eventCategory: \"Engagement\",\n                        eventAction: \"a2hs\",\n                        eventLabel: \"Engagement Campaign\",\n                        eventValue: chosen ? 1 : 0\n                    })\n                }\n                this.setState({ \n                    deferredPrompt: null ,\n                    notify: false\n                })\n            });\n    }\n\n    handleClose = () => {\n        localStorage.setItem('a2hs-decision','made')\n        this.setState({ display: false })\n    }\n\n    createMsg = () => (\n        <div className={styles.container}>\n            <Link to=\"/#\" className={styles.link} onClick={this.handleAdd}>Add Secret Unspoken to homescreen</Link>\n            <IconButton>\n                <CloseIcon fontSize=\"small\" onClick={this.handleClose}/>\n            </IconButton>\n        </div>\n    )\n\n    componentDidMount(){\n\n        if (!window && !window.addEventListener) return \n\n        window.addEventListener('beforeinstallprompt', (e) => {\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\n            e.preventDefault();\n            // Stash the event so it can be triggered later.\n            this.setState({ deferredPrompt: e })\n        })\n\n        if (localStorage.getItem('a2hs-decision')==='made') return \n\n        setTimeout(\n            ()=>this.setState({ display: true}),\n            this.props.after\n        )\n    }\n\n    render(){\n        return this.state.display\n            ? (<MySnackbar duration={Infinity} msg={this.createMsg()} />)\n            : null\n\n    }\n}\n\nAddToHomeScreen.propTypes={\n    after: PropTypes.number.isRequired\n}\n\nAddToHomeScreen.defaultProps={\n    after: 0\n}\n\nexport default AddToHomeScreen","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport moment from 'moment'\n\nconst ArticleStructuredData = props => {\n    const { title, slug, author, description } = props \n    const { blogName, imgs, pubDate, modDate, siteUrl } = props\n    const content=JSON.stringify({\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"NewsArticle\",\n        \"mainEntityOfPage\": {\n            \"@type\": \"WebPage\",\n            \"@id\": slug\n        },\n        \"headline\": title,\n        \"image\": imgs,\n        \"datePublished\": moment.utc(pubDate,\"YYYY-MM-DD\").format(),\n        \"dateModified\": moment.utc(modDate,\"YYYY-MM-DD\").format(),\n        \"author\": {\n            \"@type\": \"Person\",\n            \"name\": author\n        },\n        \"publisher\": {\n            \"@type\": \"Organization\",\n            \"name\": blogName,\n            \"logo\":{\n                \"@type\": \"ImageObject\",\n                \"url\": `${siteUrl}/site-logo.png`\n            }\n        },\n        \"description\": description\n    })\n    return (\n        <Helmet>\n            <script type=\"application/ld+json\">{ content }</script>\n        </Helmet>  \n    )\n}\n\nconst strType=PropTypes.string\nArticleStructuredData.propTypes={\n    title: strType.isRequired,\n    slug: strType.isRequired,\n    author: strType.isRequired,\n    description: strType.isRequired,\n    blogName: strType.isRequired,\n    imgs:PropTypes.arrayOf([strType]),\n    pubDate: strType.isRequired,\n    modDate: strType.isRequired,\n    siteUrl: strType.isRequired\n}\n\nexport default ArticleStructuredData","import React from 'react'\n\nimport classes from './BlogPostFooter.module.css'\nimport { Link } from 'gatsby'\n\nconst BlogPostFooter = props => (\n    <div className={classes.root}>\n        Enjoying the content? <Link to=\"/subscribe\">Subscribe</Link> to get notified when new content gets posted!\n    </div>\n)\n\nexport default BlogPostFooter","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Column from '../components/Column'\nimport Disqus from 'disqus-react'\nimport StoryEngagement from \"../components/StoryEngagement\"\nimport PostHeader from '../components/PostHeader'\nimport PostLink from \"../components/PostLink\"\nimport AddToHomeScreen from '../components/AddToHomeScreen'\nimport Helmet from 'react-helmet'\nimport ArticleStructuredData from \"../components/ArticleStructuredData\"\nimport moment from 'moment'\nimport BlogPostFooter from \"../components/BlogPostFooter/BlogPostFooter\"\n\nexport default ({ data, location, pageContext }) => {\n  const siteMeta = data.site.siteMetadata\n  const post = data.markdownRemark\n  const disqusConfig = {\n    url: location.href,\n    identifier: post.fields.slug, \n    title: post.frontmatter.title\n  }\n  const { prev, next } = pageContext\n  return ( \n    <React.Fragment>\n      <ArticleStructuredData \n        title={post.frontmatter.title}\n        slug={post.frontmatter.slug}\n        author={post.frontmatter.author}\n        imgs={[post.frontmatter.banner]}\n        description={post.frontmatter.description}\n        blogName={siteMeta.title}\n        pubDate={post.frontmatter.date}\n        modDate={post.frontmatter.date}\n        siteUrl={siteMeta.siteUrl}\n      />\n      <Helmet>\n        <title>{post.frontmatter.title}</title>   \n      </Helmet>\n      <Layout>\n        <AddToHomeScreen after={15000} />\n        <Column>\n            <PostHeader \n              title={post.frontmatter.title} \n              date={moment(post.frontmatter.date).format(\"DD MMMM, YYYY\")} \n              wordCount={post.wordCount.words}\n            />\n            <StoryEngagement url={location.href}/>\n            <div className=\"markdown-body\" dangerouslySetInnerHTML={{ __html: post.html }} />\n            { next && <PostLink isNext={true} to={next.fields.slug}>{next.frontmatter.title}</PostLink> }\n            { prev && <PostLink isNext={false} to={prev.fields.slug}>{prev.frontmatter.title}</PostLink> }\n            <BlogPostFooter />\n            <Disqus.DiscussionEmbed shortname={siteMeta.shortname} config={disqusConfig}/>\n        </Column>\n      </Layout>\n    </React.Fragment>\n    \n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        shortname\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date\n        author\n        description\n        banner\n      }\n      fields {\n        slug\n      }\n      wordCount {\n        words\n      }\n    }\n  }\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ButtonBase-module--btn--VIkqv\",\"btnShadow\":\"ButtonBase-module--btn--shadow--2enFj\",\"btnContained\":\"ButtonBase-module--btn--contained--2lS1t\",\"btnOutlined\":\"ButtonBase-module--btn--outlined--2IVX3\"};","import React from 'react'\nimport classNames from 'classnames'\n\nimport styles from './ButtonBase.module.css'\n\nconst ButtonBase = props => {\n    const { className, ...rest } = props\n\n    return (\n        <button {...rest} className={classNames(styles.btn,className)}>\n            { props.children }    \n        </button>\n    )\n}\n\nexport default ButtonBase","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Hidden from '@material-ui/core/Hidden'\n\nconst MySnackbar = props => (\n    <React.Fragment>\n        <Hidden smDown>\n            <Snackbar\n                autoHideDuration={props.duration}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n                open={props.msg}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<div id=\"message-id\">{props.msg}</div>}\n            />\n        </Hidden>\n        <Hidden mdUp>\n            <Snackbar\n                autoHideDuration={props.duration}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                open={props.msg}\n                ContentProps={{\n                    'aria-describedby': 'message-id',\n                }}\n                message={<div id=\"message-id\">{props.msg}</div>}\n            />\n        </Hidden>\n    </React.Fragment>\n)\n\nMySnackbar.defaultProps={\n    duration: 4000\n}\n\nexport default MySnackbar","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"HeaderMeta-module--meta--1iWAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"metaHeading\":\"PostHeader-module--meta-heading--2nY_2\"};","import React from 'react'\n\nimport styles from './HeaderMeta.module.css'\n\nconst HeaderMeta = props => (\n    <span className={styles.meta}>{props.prefix}{props.children}</span>\n)\n\nHeaderMeta.defaultProps={\n    prefix: \"\"\n}\n\nexport default HeaderMeta","import React from 'react'\nimport HeaderMeta from './HeaderMeta'\n\nimport styles from './PostHeader.module.css'\n\nconst estimateTTR = wc => Math.round(wc/250)\n\nconst PostHeader = props => (\n    <div className={styles.metaHeading}>\n        <div>\n            <HeaderMeta>{props.date}</HeaderMeta>\n            { props.wordCount && (\n                <React.Fragment>\n                    <HeaderMeta>•</HeaderMeta>\n                    <HeaderMeta>{estimateTTR(props.wordCount)} min read</HeaderMeta>\n                </React.Fragment>\n            )}\n        </div>\n        <h2>{props.title}</h2>\n    </div>\n)\n\nexport default PostHeader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StoryEngagement-module--container--2vsAN\",\"buttonContent\":\"StoryEngagement-module--button-content--mOe6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostLink-module--container--L5cIX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddToHomeScreen-module--container--29F3d\",\"link\":\"AddToHomeScreen-module--link--3MTxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BlogPostFooter-module--root--1Hviy\"};"],"sourceRoot":""}